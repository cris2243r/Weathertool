{"ast":null,"code":"import WeatherSummary from \"@/components/WeatherSummary\";\nexport default {\n  name: 'App',\n  components: {\n    WeatherSummary\n  },\n\n  data() {\n    return {\n      cities: [],\n      selectedCity: null,\n      weather: null,\n      units: 'metric',\n      query: null\n    };\n  },\n\n  methods: {\n    async refreshCities() {\n      console.log(\"refreshing cities\");\n      console.log(this.query);\n      const cityData = await fetch(`https://api.openweathermap.org/geo/1.0/direct?q=${this.query}&limit=5&appid=bf89e941da14d9a5e0a60764ed99bf4a`);\n      this.cities = await cityData.json();\n      console.log(cityData);\n    },\n\n    async refreshWeatherData() {\n      const url = `https://api.openweathermap.org/data/2.5/weather?lat=${this.selectedCity.lat}&lon=${this.selectedCity.lon}&appid=bf89e941da14d9a5e0a60764ed99bf4a&units=${this.units}`;\n      const weatherData = await fetch(url);\n      this.weather = await weatherData.json();\n      console.log(url);\n    },\n\n    setCity(city) {\n      this.selectedCity = city;\n      this.cities = [];\n    },\n\n    clearQuery() {\n      this.query = null;\n      this.setCity(null);\n    }\n\n  },\n  watch: {\n    selectedCity(newval) {\n      newval ? this.refreshWeatherData() : this.weather = null;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA8CA;AAEA;EACAA,WADA;EAEAC;IAAAC;EAAA,CAFA;;EAGAC;IACA;MACAC,UADA;MAEAC,kBAFA;MAGAC,aAHA;MAIAC,eAJA;MAKAC;IALA;EAOA,CAXA;;EAYAC;IAEA;MACAC;MACAA;MAEA;MACA;MACAA;IACA,CATA;;IAWA;MACA,YACA,sKADA;MAEA;MACA;MACAA;IACA,CAjBA;;IAmBAC;MACA;MACA;IACA,CAtBA;;IAwBAC;MACA;MACA;IACA;;EA3BA,CAZA;EA2CAC;IACAR;MACAS;IACA;;EAHA;AA3CA","names":["name","components","WeatherSummary","data","cities","selectedCity","weather","units","query","methods","console","setCity","clearQuery","watch","newval"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <header>\n    <h1>\n      WeatherTool\n    </h1>\n    <form>\n      <fieldset>\n        <label for=\"query\">Select a city</label>\n        <input id=\"query\" type=\"text\" autocomplete=\"off\" placeholder=\"Enter city....\" @keyup=\"refreshCities\" v-model=\"query\">\n      </fieldset>\n      <input\n          type=\"button\" @click=\"clearQuery\" value=\"X\">\n    </form>\n    <ul class=\"results\">\n      <li v-for=\"(city, idx) in cities\" :key=\"'part-' + idx\" @click=\"setCity(city)\">{{ city.name }}, {{ city.state }},\n        {{ city.country }}\n      </li>\n    </ul>\n    </header>\n    <transition name=\"fade\">\n    <div class=\"selected-city\" v-if=\"selectedCity\">\n      <h2>Current Weather for <strong>{{ selectedCity?.name }} {{ selectedCity?.state }} {{\n          selectedCity?.country\n        }}</strong></h2>\n      <div>\n      <WeatherSummary :weather=\"weather\"/>\n      </div>\n    </div>\n    </transition>\n    <transition name=\"fade\">\n    <div class=\"empty\" v-if=\"!selectedCity\">\n      <span class=\"material-symbols-outlined\">cloud_off</span>\n      <h1>Search for a city to begin</h1>\n    </div>\n    </transition>\n\n\n    <!--    <div>-->\n    <!--      <pre><code>{{weather}}</code></pre>-->\n    <!--    </div>-->\n  </div>\n</template>\n\n<script>\n\nimport WeatherSummary from \"@/components/WeatherSummary\";\n\nexport default {\n  name: 'App',\n  components: {WeatherSummary},\n  data() {\n    return {\n      cities: [],\n      selectedCity: null,\n      weather: null,\n      units: 'metric',\n      query: null,\n    }\n  },\n  methods: {\n\n    async refreshCities() {\n      console.log(\"refreshing cities\")\n      console.log(this.query)\n\n      const cityData = await fetch(`https://api.openweathermap.org/geo/1.0/direct?q=${this.query}&limit=5&appid=bf89e941da14d9a5e0a60764ed99bf4a`)\n      this.cities = await cityData.json()\n      console.log(cityData)\n    },\n\n    async refreshWeatherData() {\n      const url =\n          `https://api.openweathermap.org/data/2.5/weather?lat=${this.selectedCity.lat}&lon=${this.selectedCity.lon}&appid=bf89e941da14d9a5e0a60764ed99bf4a&units=${this.units}`\n      const weatherData = await fetch(url)\n      this.weather = await weatherData.json()\n      console.log(url)\n    },\n\n    setCity(city) {\n      this.selectedCity = city;\n      this.cities = []\n    },\n\n    clearQuery() {\n      this.query = null\n      this.setCity(null)\n    }\n\n\n  },\n  watch: {\n    selectedCity(newval) {\n      newval ? this.refreshWeatherData() : this.weather = null\n    }\n  },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\nbody {\n  margin: 0 0 0 0 ;\n  background-color: #000000;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='4' height='4' viewBox='0 0 4 4'%3E%3Cpath fill='%23848287' fill-opacity='0.4' d='M1 3h1v1H1V3zm2-2h1v1H3V1z'%3E%3C/path%3E%3C/svg%3E\");\n}\n\nheader {\n  background-color: rgb(44, 109, 34);\n  color:white;\n  padding-top: 1.6em;\n  padding-bottom: 3.5em;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\nheader h1 {\n  font-size: 5em;\n  margin-bottom: 1em;\n}\n\n\nform {\n  text-align: left;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\nfieldset {\n  display: flex;\n  flex-direction: column;\n  border: none;\n}\n\nlabel {\n  padding-bottom: 0.5em;\n}\n\ninput::placeholder {\n  color: #cecece;\n}\n\n\ninput[type=text] {\n  padding-left: 0.4em;\n  width:100%;\n  height: 1.8em;\n  font-size: 2.4em;\n  font-weight: bold;\n  border-radius: 6px;\n  border: none;\n}\n\ninput[type=button] {\n  background-color: transparent; /* Green */\n  border: none;\n  color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  font-weight: bold;\n  font-size: 2.6em;\n  margin-top: 0.5em;\n  margin-left: 20px;\n}\n\ninput[type=button]:hover {\n  cursor: pointer;\n  color: #cecece;\n}\n\nul {\n  margin-top: 1em;\n  list-style: none;\n}\n\nli {\n  padding-bottom: 0.4em;\n}\n\nli:hover {\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.empty {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 3em;\n  color: #cecece;\n  font-size: 1.8em;\n  font-weight: bold;\n}\n\n.empty span{\n  font-size: 3em;\n}\n\n\nh1 {\n  margin-top: 0;\n  margin-bottom: 0;\n  text-align: left;\n  display: flex;\n}\n\nh2 {\n  margin-top: 1em;\n  margin-bottom: 1em;\n  font-size: 3.8em;\n  text-align: center;\n}\n\nh4 {\n  text-align: left;\n  width: 100%;\n}\n\n@media only screen and (max-width: 768px) {\n  .lug {\n    margin-bottom: 0.8em;\n    width: calc(100vw - 3.2em);\n  }\n}\n\n.fade-enter-active, .fade-leave-active {\n  transition: opacity .5s;\n}\n.fade-enter, .fade-leave-to /* .fade-leave-active below version 2.1.8 */ {\n  opacity: 0;\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module"}